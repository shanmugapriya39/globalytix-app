workflows:
  ios_auto_sign:
    name: "iOS • Auto signing via ASC"
    environment:
      xcode: 16.4
      cocoapods: default
      vars:
        # ==== REQUIRED: ASC API credentials (INLINE) ====
        APP_STORE_CONNECT_ISSUER_ID: "YOUR-ISSUER-ID-UUID"         # from App Store Connect → Users and Access → Keys
        APP_STORE_CONNECT_KEY_IDENTIFIER: "YOURKEYID123"           # the Key ID (e.g., 2T5MXFAHEV5Z)

        # Paste your full .p8 here EXACTLY (no quotes). Keep headers/footers and newlines.
        APP_STORE_CONNECT_PRIVATE_KEY: |-
          -----BEGIN PRIVATE KEY-----
          <PASTE YOUR .p8 CONTENTS EXACTLY, INCLUDING THE LINES YOU SENT>
          -----END PRIVATE KEY-----

        # ==== REQUIRED: RSA key used to CREATE the signing certificate ====
        # Generate on Windows with:  openssl genrsa -out private.key 2048
        # Then open private.key and paste its ENTIRE content here:
        CERTIFICATE_PRIVATE_KEY: |-
          -----BEGIN RSA PRIVATE KEY-----
          <PASTE YOUR RSA 2048 KEY HERE>
          -----END RSA PRIVATE KEY-----

        # ==== Project settings ====
        BUNDLE_ID: "com.yourcompany.yourapp"
        XCODE_PROJECT: "YourApp.xcworkspace"   # change to "YourApp.xcodeproj" if you DON'T use CocoaPods
        XCODE_SCHEME: "YourScheme"
        EXPORT_METHOD: "app-store"              # app-store | ad-hoc | development | enterprise

    cache:
      cache_paths:
        - "~/Library/Caches/CocoaPods"
        - "~/Library/Developer/Xcode/DerivedData"

    scripts:
      - name: "Sanity check required vars"
        script: |
          set -euo pipefail
          need=(APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_PRIVATE_KEY CERTIFICATE_PRIVATE_KEY BUNDLE_ID XCODE_PROJECT XCODE_SCHEME)
          for v in "${need[@]}"; do
            [ -n "${!v:-}" ] || { echo "Missing required variable: $v"; exit 1; }
          done
          echo "ASC Issuer: ${APP_STORE_CONNECT_ISSUER_ID:0:8}…  KeyID: ${APP_STORE_CONNECT_KEY_IDENTIFIER}"

      - name: "Fetch signing files from App Store Connect"
        script: |
          set -euo pipefail
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create

      - name: "Resolve dependencies (CocoaPods)"
        script: |
          if [ -f "Podfile" ]; then
            pod repo update
            pod install
          fi

      - name: "Build and export IPA"
        script: |
          set -euo pipefail
          if [[ "$XCODE_PROJECT" == *.xcworkspace ]]; then
            xcode-project build-ipa \
              --workspace "$XCODE_PROJECT" \
              --scheme "$XCODE_SCHEME" \
              --archive-configuration "Release" \
              --export-method "$EXPORT_METHOD"
          else
            xcode-project build-ipa \
              --project "$XCODE_PROJECT" \
              --scheme "$XCODE_SCHEME" \
              --archive-configuration "Release" \
              --export-method "$EXPORT_METHOD"
          fi

    artifacts:
      - "$CM_EXPORT_DIR/*.ipa"
      - "$CM_EXPORT_DIR/*.dSYM.zip"
      - "$CM_EXPORT_DIR/export-options.plist"
      - "~/Library/Logs/gym/*.log"


workflows:
  ios_auto_sign:
    name: "iOS • Auto signing via ASC"
    environment:
      xcode: 16.4
      cocoapods: default
      groups:
        - appstore              # <-- uses your group in the screenshot
      vars:
        # project settings (non-secrets)
        BUNDLE_ID: "com.yourcompany.yourapp"
        XCODE_PROJECT: "YourApp.xcworkspace"   # change to "YourApp.xcodeproj" if NO CocoaPods
        XCODE_SCHEME: "YourApp"
        EXPORT_METHOD: "app-store"              # app-store | ad-hoc | development | enterprise
        # Optional if you want to pin the team in build steps:
        # DEVELOPMENT_TEAM and APPLE_TEAM_ID already exist in your group; we don’t need them here.

    cache:
      cache_paths:
        - "~/Library/Caches/CocoaPods"
        - "~/Library/Developer/Xcode/DerivedData"

    scripts:
      - name: "Sanity check required vars"
        script: |
          set -euo pipefail
          need=(APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_PRIVATE_KEY CERTIFICATE_PRIVATE_KEY BUNDLE_ID)
          for v in "${need[@]}"; do
            if [ -z "${!v:-}" ]; then
              echo "Missing required variable: $v"; exit 1
            fi
          done
          echo "Issuer: ${APP_STORE_CONNECT_ISSUER_ID:0:8}…  KeyID: ${APP_STORE_CONNECT_KEY_IDENTIFIER}"

      - name: "Fetch signing files from App Store Connect"
        script: |
          set -euo pipefail
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create

      - name: "Resolve dependencies (CocoaPods)"
        script: |
          if [ -f "Podfile" ]; then
            pod repo update
            pod install
          fi

      - name: "Debug: show codesign identities and profiles"
        script: |
          security find-identity -v -p codesigning || true
          ls -1 "$HOME/Library/MobileDevice/Provisioning Profiles" || true

      - name: "Build and export IPA"
        script: |
          set -euo pipefail
          if [[ "$XCODE_PROJECT" == *.xcworkspace ]]; then
            xcode-project build-ipa \
              --workspace "$XCODE_PROJECT" \
              --scheme "$XCODE_SCHEME" \
              --archive-configuration "Release" \
              --export-method "$EXPORT_METHOD"
          else
            xcode-project build-ipa \
              --project "$XCODE_PROJECT" \
              --scheme "$XCODE_SCHEME" \
              --archive-configuration "Release" \
              --export-method "$EXPORT_METHOD"
          fi

    artifacts:
      - "$CM_EXPORT_DIR/*.ipa"
      - "$CM_EXPORT_DIR/*.dSYM.zip"
      - "$CM_EXPORT_DIR/export-options.plist"
      - "~/Library/Logs/gym/*.log"

    # Enable if you want automatic TestFlight upload
    # publishing:
    #   app_store_connect:
    #     auth: api_key
    #     key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
    #     issuer_id: $APP_STORE_CONNECT_ISSUER_ID
    #     private_key: $APP_STORE_CONNECT_PRIVATE_KEY
    #     submit_to_testflight: true
    #     beta_groups:
    #       - "Internal Testers"
